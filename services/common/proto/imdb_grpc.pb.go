// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: imdb.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// IMDBClient is the client API for IMDB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type IMDBClient interface {
	GetFilm(ctx context.Context, in *FilmTitle, opts ...grpc.CallOption) (*Film, error)
}

type iMDBClient struct {
	cc grpc.ClientConnInterface
}

func NewIMDBClient(cc grpc.ClientConnInterface) IMDBClient {
	return &iMDBClient{cc}
}

func (c *iMDBClient) GetFilm(ctx context.Context, in *FilmTitle, opts ...grpc.CallOption) (*Film, error) {
	out := new(Film)
	err := c.cc.Invoke(ctx, "/imdb.IMDB/GetFilm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IMDBServer is the server API for IMDB service.
// All implementations must embed UnimplementedIMDBServer
// for forward compatibility
type IMDBServer interface {
	GetFilm(context.Context, *FilmTitle) (*Film, error)
	mustEmbedUnimplementedIMDBServer()
}

// UnimplementedIMDBServer must be embedded to have forward compatible implementations.
type UnimplementedIMDBServer struct {
}

func (UnimplementedIMDBServer) GetFilm(context.Context, *FilmTitle) (*Film, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFilm not implemented")
}
func (UnimplementedIMDBServer) mustEmbedUnimplementedIMDBServer() {}

// UnsafeIMDBServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to IMDBServer will
// result in compilation errors.
type UnsafeIMDBServer interface {
	mustEmbedUnimplementedIMDBServer()
}

func RegisterIMDBServer(s grpc.ServiceRegistrar, srv IMDBServer) {
	s.RegisterService(&IMDB_ServiceDesc, srv)
}

func _IMDB_GetFilm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilmTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMDBServer).GetFilm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imdb.IMDB/GetFilm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMDBServer).GetFilm(ctx, req.(*FilmTitle))
	}
	return interceptor(ctx, in, info, handler)
}

// IMDB_ServiceDesc is the grpc.ServiceDesc for IMDB service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var IMDB_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "imdb.IMDB",
	HandlerType: (*IMDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFilm",
			Handler:    _IMDB_GetFilm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "imdb.proto",
}
